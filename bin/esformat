///usr/bin/env node

"use strict";

var async = require('async');
var fs = require('fs');
var glob = require('glob');
var path = require('path');

var esformatter = require('esformatter');
esformatter.register(require('esformatter-jsx'));

function globPattern(pattern) {
  return new Promise((resolve, reject) => {
    glob(pattern, (err, files) => {
      if (err) {
        reject(err);
      }
      resolve(files);
    });
  });
}

var pattern = process.argv[2] || "./src/**/*.jsx";

globPattern(pattern).then((files) => {
  files.forEach((file) => {
    console.log(file);
    var content = fs.readFileSync(file).toString();
    var output = esformatter.format(content);
    fs.writeFileSync(file, output, { encoding: 'utf-8' });
  });
})
.catch((err) => console.log(err));
